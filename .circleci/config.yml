# Javascript Node CircleCI 2.0 configuration file
# 
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:

  test-ssh:
    working_directory: ~
    docker:
      - image: circleci/node:8.9

    steps:
      - add-ssh-keys:
          fingerprints:
            - "e2:bf:a7:6e:97:cd:c8:d6:60:3c:6c:e8:c5:65:42:85"
      - run:
          name: SSH Key Scan
          command: cd ~ && la && cd .ssh && la && ssh-keyscan -H 46.101.223.116 >> ~/.ssh/known_hosts
      # Log the current branch and working directory 
      - run:
          name: SSH
          command: ssh -v root@46.101.223.116


  test:
    working_directory: ~
    docker:
      - image: circleci/node:8.9

    steps:
      # Checkout the code from the branch into the working_directory
      - checkout

      # Log the current branch and working directory
      - run:
          name: Show current branch and working directory
          command: pwd && echo ${CIRCLE_BRANCH}

      # Download and cache dependencies for frontend
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "./frontend/package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      # Install project dependencies for frontend
      - run:
          name: Install local dependencies
          command: cd ./frontend && npm install --save-dev

      # Cache local dependencies for frontend
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "./frontend/package.json" }}
          
      - run:
          name: Unit & Integration tests for Frontend
          command: cd ./frontend && npm run test
          
      - run:
          name: Unit & Integration tests for Frontend
          command: cd ./frontend && npm run test
          
      - run:
          name: E2E tests for Frontend
          command: cd ./frontend && npm run e2e  

  build-and-deploy:
    working_directory: ~
    docker:
      - image: circleci/node:8.9

    steps:
      # Checkout the code from the branch into the working_directory
      - checkout

      # Log the current branch and working directory
      - run:
          name: Show current branch and working directory
          command: pwd && echo ${CIRCLE_BRANCH}

      # Download and cache dependencies for frontend
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "./frontend/package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      # Install project dependencies for frontend
      - run:
          name: Install local dependencies
          command: cd ./frontend && npm install

      # Cache local dependencies for frontend
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "./frontend/package.json" }}

      # Download and cache dependencies for backend
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "./backend/package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      # Install project dependencies for frontend
      - run:
          name: Install local dependencies
          command: cd ./backend && npm install

      # Cache local dependencies for frontend
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "./backend/package.json" }}
      - run:
          name: Build project
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              npm run build:prod && mv www/ ../backend/www/
            else
              npm run build
            fi

workflows:
  version: 2
  test-and-deploy:
    jobs:
      - test-ssh
      #- test
      #- build-and-deploy:
          #requires:
            #- test
      #- test-backend
      #  requires:
      #    - prepare-backend

      #- build-frontend:
       #   requires:
       #     - test-frontend

      #- deploy-frontend
      #  requires:
      #      - build-frontend
      #  filters:
      #    branches:
      #      only:
      #        - master


