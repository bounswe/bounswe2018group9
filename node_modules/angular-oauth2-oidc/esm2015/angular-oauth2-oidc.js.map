{
  "version": 3,
  "file": "angular-oauth2-oidc.js",
  "sources": [
    "ng://angular-oauth2-oidc/out/tokens.ts",
    "ng://angular-oauth2-oidc/out/token-validation/jwks-validation-handler.ts",
    "ng://angular-oauth2-oidc/out/angular-oauth-oidic.module.ts",
    "ng://angular-oauth2-oidc/out/token-validation/null-validation-handler.ts",
    "ng://angular-oauth2-oidc/out/interceptors/default-oauth.interceptor.ts",
    "ng://angular-oauth2-oidc/out/interceptors/resource-server-error-handler.ts",
    "ng://angular-oauth2-oidc/out/oauth-module.config.ts",
    "ng://angular-oauth2-oidc/out/oauth-service.ts",
    "ng://angular-oauth2-oidc/out/encoder.ts",
    "ng://angular-oauth2-oidc/out/auth.config.ts",
    "ng://angular-oauth2-oidc/out/base64-helper.ts",
    "ng://angular-oauth2-oidc/out/events.ts",
    "ng://angular-oauth2-oidc/out/url-helper.service.ts",
    "ng://angular-oauth2-oidc/out/token-validation/validation-handler.ts",
    "ng://angular-oauth2-oidc/out/types.ts"
  ],
  "sourcesContent": [
    "import { InjectionToken } from '@angular/core';\r\nimport { AuthConfig } from './auth.config';\r\n\r\nexport const AUTH_CONFIG = new InjectionToken<AuthConfig>('AUTH_CONFIG');\r\n",
    "import {\r\n  AbstractValidationHandler,\r\n  ValidationParams\r\n} from './validation-handler';\r\n\r\n// declare var require: any;\r\n// let rs = require('jsrsasign');\r\n\r\nimport * as rs from 'jsrsasign';\r\n\r\n/**\r\n * Validates the signature of an id_token against one\r\n * of the keys of an JSON Web Key Set (jwks).\r\n *\r\n * This jwks can be provided by the discovery document.\r\n */\r\nexport class JwksValidationHandler extends AbstractValidationHandler {\r\n  /**\r\n   * Allowed algorithms\r\n   */\r\n  allowedAlgorithms: string[] = [\r\n    'HS256',\r\n    'HS384',\r\n    'HS512',\r\n    'RS256',\r\n    'RS384',\r\n    'RS512',\r\n    'ES256',\r\n    'ES384',\r\n    'PS256',\r\n    'PS384',\r\n    'PS512'\r\n  ];\r\n\r\n  /**\r\n   * Time period in seconds the timestamp in the signature can\r\n   * differ from the current time.\r\n   */\r\n  gracePeriodInSec = 600;\r\n\r\n  validateSignature(params: ValidationParams, retry = false): Promise<any> {\r\n    if (!params.idToken) throw new Error('Parameter idToken expected!');\r\n    if (!params.idTokenHeader)\r\n      throw new Error('Parameter idTokenHandler expected.');\r\n    if (!params.jwks) throw new Error('Parameter jwks expected!');\r\n\r\n    if (\r\n      !params.jwks['keys'] ||\r\n      !Array.isArray(params.jwks['keys']) ||\r\n      params.jwks['keys'].length === 0\r\n    ) {\r\n      throw new Error('Array keys in jwks missing!');\r\n    }\r\n\r\n    // console.debug('validateSignature: retry', retry);\r\n\r\n    let kid: string = params.idTokenHeader['kid'];\r\n    let keys: object[] = params.jwks['keys'];\r\n    let key: object;\r\n\r\n    let alg = params.idTokenHeader['alg'];\r\n\r\n    if (kid) {\r\n      key = keys.find(k => k['kid'] === kid /* && k['use'] === 'sig' */);\r\n    } else {\r\n      let kty = this.alg2kty(alg);\r\n      let matchingKeys = keys.filter(\r\n        k => k['kty'] === kty && k['use'] === 'sig'\r\n      );\r\n\r\n      /*\r\n            if (matchingKeys.length == 0) {\r\n                let error = 'No matching key found.';\r\n                console.error(error);\r\n                return Promise.reject(error);\r\n            }*/\r\n      if (matchingKeys.length > 1) {\r\n        let error =\r\n          'More than one matching key found. Please specify a kid in the id_token header.';\r\n        console.error(error);\r\n        return Promise.reject(error);\r\n      } else if (matchingKeys.length === 1) {\r\n        key = matchingKeys[0];\r\n      }\r\n    }\r\n\r\n    if (!key && !retry && params.loadKeys) {\r\n      return params\r\n        .loadKeys()\r\n        .then(loadedKeys => (params.jwks = loadedKeys))\r\n        .then(_ => this.validateSignature(params, true));\r\n    }\r\n\r\n    if (!key && retry && !kid) {\r\n      let error = 'No matching key found.';\r\n      console.error(error);\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    if (!key && retry && kid) {\r\n      let error =\r\n        'expected key not found in property jwks. ' +\r\n        'This property is most likely loaded with the ' +\r\n        'discovery document. ' +\r\n        'Expected key id (kid): ' +\r\n        kid;\r\n\r\n      console.error(error);\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    let keyObj = rs.KEYUTIL.getKey(key);\r\n    let validationOptions = {\r\n      alg: this.allowedAlgorithms,\r\n      gracePeriod: this.gracePeriodInSec\r\n    };\r\n    let isValid = rs.KJUR.jws.JWS.verifyJWT(\r\n      params.idToken,\r\n      keyObj,\r\n      validationOptions\r\n    );\r\n\r\n    if (isValid) {\r\n      return Promise.resolve();\r\n    } else {\r\n      return Promise.reject('Signature not valid');\r\n    }\r\n  }\r\n\r\n  private alg2kty(alg: string) {\r\n    switch (alg.charAt(0)) {\r\n      case 'R':\r\n        return 'RSA';\r\n      case 'E':\r\n        return 'EC';\r\n      default:\r\n        throw new Error('Cannot infer kty from alg: ' + alg);\r\n    }\r\n  }\r\n\r\n  calcHash(valueToHash: string, algorithm: string): string {\r\n    let hashAlg = new rs.KJUR.crypto.MessageDigest({ alg: algorithm });\r\n    let result = hashAlg.digestString(valueToHash);\r\n    let byteArrayAsString = this.toByteArrayAsString(result);\r\n    return byteArrayAsString;\r\n  }\r\n\r\n  toByteArrayAsString(hexString: string) {\r\n    let result = '';\r\n    for (let i = 0; i < hexString.length; i += 2) {\r\n      let hexDigit = hexString.charAt(i) + hexString.charAt(i + 1);\r\n      let num = parseInt(hexDigit, 16);\r\n      result += String.fromCharCode(num);\r\n    }\r\n    return result;\r\n  }\r\n}\r\n",
    "import { OAuthStorage } from './types';\r\nimport { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\n\r\nimport { OAuthService } from './oauth-service';\r\nimport { UrlHelperService } from './url-helper.service';\r\n\r\nimport { OAuthModuleConfig } from './oauth-module.config';\r\nimport {\r\n  OAuthResourceServerErrorHandler,\r\n  OAuthNoopResourceServerErrorHandler\r\n} from './interceptors/resource-server-error-handler';\r\nimport { DefaultOAuthInterceptor } from './interceptors/default-oauth.interceptor';\r\nimport { ValidationHandler } from './token-validation/validation-handler';\r\nimport { NullValidationHandler } from './token-validation/null-validation-handler';\r\n\r\nexport function createDefaultStorage() {\r\n  return typeof sessionStorage !== 'undefined' ? sessionStorage : null;\r\n}\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [],\r\n  exports: []\r\n})\r\nexport class OAuthModule {\r\n  static forRoot(\r\n    config: OAuthModuleConfig = null,\r\n    validationHandlerClass = NullValidationHandler\r\n  ): ModuleWithProviders {\r\n    // const setupInterceptor = config && config.resourceServer && config.resourceServer.allowedUrls;\r\n\r\n    return {\r\n      ngModule: OAuthModule,\r\n      providers: [\r\n        OAuthService,\r\n        UrlHelperService,\r\n        { provide: OAuthStorage, useFactory: createDefaultStorage },\r\n        { provide: ValidationHandler, useClass: validationHandlerClass},\r\n        {\r\n          provide: OAuthResourceServerErrorHandler,\r\n          useClass: OAuthNoopResourceServerErrorHandler\r\n        },\r\n        { provide: OAuthModuleConfig, useValue: config },\r\n        {\r\n          provide: HTTP_INTERCEPTORS,\r\n          useClass: DefaultOAuthInterceptor,\r\n          multi: true\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n",
    "import { ValidationHandler, ValidationParams } from './validation-handler';\r\n\r\n/**\r\n * A validation handler that isn't validating nothing.\r\n * Can be used to skip validation (on your own risk).\r\n */\r\nexport class NullValidationHandler implements ValidationHandler {\r\n  validateSignature(validationParams: ValidationParams): Promise<any> {\r\n    return Promise.resolve(null);\r\n  }\r\n  validateAtHash(validationParams: ValidationParams): boolean {\r\n    return true;\r\n  }\r\n}\r\n",
    "import { Injectable, Inject, Optional } from '@angular/core';\r\nimport { OAuthService } from '../oauth-service';\r\nimport { OAuthStorage } from '../types';\r\nimport {\r\n    HttpEvent,\r\n    HttpHandler,\r\n    HttpInterceptor,\r\n    HttpRequest,\r\n    HttpResponse,\r\n    HttpErrorResponse\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { OAuthResourceServerErrorHandler } from './resource-server-error-handler';\r\nimport { OAuthModuleConfig } from '../oauth-module.config';\r\n\r\n@Injectable()\r\nexport class DefaultOAuthInterceptor implements HttpInterceptor {\r\n    constructor(\r\n        private authStorage: OAuthStorage,\r\n        private errorHandler: OAuthResourceServerErrorHandler,\r\n        @Optional() private moduleConfig: OAuthModuleConfig\r\n    ) { }\r\n\r\n    private checkUrl(url: string): boolean {\r\n        const found = this.moduleConfig.resourceServer.allowedUrls.find(u => url.startsWith(u));\r\n        return !!found;\r\n    }\r\n\r\n    public intercept(\r\n        req: HttpRequest<any>,\r\n        next: HttpHandler\r\n    ): Observable<HttpEvent<any>> {\r\n        const url = req.url.toLowerCase();\r\n\r\n        if (!this.moduleConfig) {\r\n            return next.handle(req);\r\n        }\r\n        if (!this.moduleConfig.resourceServer) {\r\n            return next.handle(req);\r\n        }\r\n        if (this.moduleConfig.resourceServer.allowedUrls && !this.checkUrl(url)) {\r\n            return next.handle(req);\r\n        }\r\n\r\n        const sendAccessToken = this.moduleConfig.resourceServer.sendAccessToken;\r\n\r\n        if (sendAccessToken && this.authStorage.getItem('access_token')) {\r\n            const token = this.authStorage.getItem('access_token');\r\n            const header = 'Bearer ' + token;\r\n\r\n            const headers = req.headers.set('Authorization', header);\r\n\r\n            req = req.clone({ headers });\r\n        }\r\n\r\n        return next\r\n            .handle(req)\r\n            .pipe(catchError(err => this.errorHandler.handleError(err)));\r\n    }\r\n}\r\n",
    "import { HttpResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\n\r\nexport abstract class OAuthResourceServerErrorHandler {\r\n  abstract handleError(err: HttpResponse<any>): Observable<any>;\r\n}\r\n\r\nexport class OAuthNoopResourceServerErrorHandler\r\n  implements OAuthResourceServerErrorHandler {\r\n  handleError(err: HttpResponse<any>): Observable<any> {\r\n    return throwError(err);\r\n  }\r\n}\r\n",
    "export abstract class OAuthModuleConfig {\r\n  resourceServer: OAuthResourceServerConfig;\r\n}\r\n\r\nexport abstract class OAuthResourceServerConfig {\r\n  /**\r\n   * Urls for which calls should be intercepted.\r\n   * If there is an ResourceServerErrorHandler registered, it is used for them.\r\n   * If sendAccessToken is set to true, the access_token is send to them too.\r\n   */\r\n  allowedUrls?: Array<string>;\r\n  sendAccessToken: boolean;\r\n}\r\n",
    "import { Injectable, NgZone, Optional } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Observable, Subject, Subscription, of, race } from 'rxjs';\r\nimport { filter, take, delay, first, tap, map } from 'rxjs/operators';\r\n\r\nimport {\r\n    ValidationHandler,\r\n    ValidationParams\r\n} from './token-validation/validation-handler';\r\nimport { UrlHelperService } from './url-helper.service';\r\nimport {\r\n    OAuthEvent,\r\n    OAuthInfoEvent,\r\n    OAuthErrorEvent,\r\n    OAuthSuccessEvent\r\n} from './events';\r\nimport {\r\n    OAuthStorage,\r\n    LoginOptions,\r\n    ParsedIdToken,\r\n    OidcDiscoveryDoc,\r\n    TokenResponse,\r\n    UserInfo\r\n} from './types';\r\nimport { b64DecodeUnicode } from './base64-helper';\r\nimport { AuthConfig } from './auth.config';\r\nimport { WebHttpUrlEncodingCodec } from './encoder';\r\n\r\n/**\r\n * Service for logging in and logging out with\r\n * OIDC and OAuth2. Supports implicit flow and\r\n * password flow.\r\n */\r\n@Injectable()\r\nexport class OAuthService extends AuthConfig {\r\n    // extending AuthConfig ist just for LEGACY reasons\r\n    // to not break existing code\r\n\r\n    /**\r\n     * The ValidationHandler used to validate received\r\n     * id_tokens.\r\n     */\r\n    public tokenValidationHandler: ValidationHandler;\r\n\r\n    /**\r\n     * @internal\r\n     * Deprecated:  use property events instead\r\n     */\r\n    public discoveryDocumentLoaded = false;\r\n\r\n    /**\r\n     * @internal\r\n     * Deprecated:  use property events instead\r\n     */\r\n    public discoveryDocumentLoaded$: Observable<object>;\r\n\r\n    /**\r\n     * Informs about events, like token_received or token_expires.\r\n     * See the string enum EventType for a full list of events.\r\n     */\r\n    public events: Observable<OAuthEvent>;\r\n\r\n    /**\r\n     * The received (passed around) state, when logging\r\n     * in with implicit flow.\r\n     */\r\n    public state?= '';\r\n\r\n    private eventsSubject: Subject<OAuthEvent> = new Subject<OAuthEvent>();\r\n    private discoveryDocumentLoadedSubject: Subject<object> = new Subject<\r\n        object\r\n        >();\r\n    private silentRefreshPostMessageEventListener: EventListener;\r\n    private grantTypesSupported: Array<string> = [];\r\n    private _storage: OAuthStorage;\r\n    private accessTokenTimeoutSubscription: Subscription;\r\n    private idTokenTimeoutSubscription: Subscription;\r\n    private sessionCheckEventListener: EventListener;\r\n    private jwksUri: string;\r\n    private sessionCheckTimer: any;\r\n    private silentRefreshSubject: string;\r\n    private inImplicitFlow = false;\r\n\r\n    constructor(\r\n        private ngZone: NgZone,\r\n        private http: HttpClient,\r\n        @Optional() storage: OAuthStorage,\r\n        @Optional() tokenValidationHandler: ValidationHandler,\r\n        @Optional() private config: AuthConfig,\r\n        private urlHelper: UrlHelperService\r\n    ) {\r\n        super();\r\n\r\n        this.discoveryDocumentLoaded$ = this.discoveryDocumentLoadedSubject.asObservable();\r\n        this.events = this.eventsSubject.asObservable();\r\n\r\n        if (tokenValidationHandler) {\r\n            this.tokenValidationHandler = tokenValidationHandler;\r\n        }\r\n\r\n        if (config) {\r\n            this.configure(config);\r\n        }\r\n\r\n        try {\r\n            if (storage) {\r\n                this.setStorage(storage);\r\n            } else if (typeof sessionStorage !== 'undefined') {\r\n                this.setStorage(sessionStorage);\r\n            }\r\n        } catch (e) {\r\n            console.error(\r\n                'cannot access sessionStorage. Consider setting an own storage implementation using setStorage',\r\n                e\r\n            );\r\n        }\r\n        this.setupRefreshTimer();\r\n    }\r\n\r\n    /**\r\n     * Use this method to configure the service\r\n     * @param config the configuration\r\n     */\r\n    public configure(config: AuthConfig) {\r\n        // For the sake of downward compatibility with\r\n        // original configuration API\r\n        Object.assign(this, new AuthConfig(), config);\r\n\r\n        this.config = Object.assign({} as AuthConfig, new AuthConfig(), config);\r\n\r\n        if (this.sessionChecksEnabled) {\r\n            this.setupSessionCheck();\r\n        }\r\n\r\n        this.configChanged();\r\n    }\r\n\r\n    private configChanged(): void { }\r\n\r\n    public restartSessionChecksIfStillLoggedIn(): void {\r\n        if (this.hasValidIdToken()) {\r\n            this.initSessionCheck();\r\n        }\r\n    }\r\n\r\n    private restartRefreshTimerIfStillLoggedIn(): void {\r\n        this.setupExpirationTimers();\r\n    }\r\n\r\n    private setupSessionCheck() {\r\n        this.events.pipe(filter(e => e.type === 'token_received')).subscribe(e => {\r\n            this.initSessionCheck();\r\n        });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param params Additional parameter to pass\r\n     */\r\n    public setupAutomaticSilentRefresh(params: object = {}) {\r\n        this.events.pipe(filter(e => e.type === 'token_expires')).subscribe(e => {\r\n            this.silentRefresh(params).catch(_ => {\r\n                this.debug('automatic silent refresh did not work');\r\n            });\r\n        });\r\n\r\n        this.restartRefreshTimerIfStillLoggedIn();\r\n    }\r\n\r\n    public loadDiscoveryDocumentAndTryLogin(options: LoginOptions = null) {\r\n        return this.loadDiscoveryDocument().then(doc => {\r\n            return this.tryLogin(options);\r\n        });\r\n    }\r\n\r\n    public loadDiscoveryDocumentAndLogin(options: LoginOptions = null) {\r\n        return this.loadDiscoveryDocumentAndTryLogin(options).then(_ => {\r\n            if (!this.hasValidIdToken() || !this.hasValidAccessToken()) {\r\n                this.initImplicitFlow();\r\n                return false;\r\n            } else {\r\n                return true;\r\n            }\r\n        });\r\n    }\r\n\r\n    private debug(...args): void {\r\n        if (this.showDebugInformation) {\r\n            console.debug.apply(console, args);\r\n        }\r\n    }\r\n\r\n    private validateUrlFromDiscoveryDocument(url: string): string[] {\r\n        const errors: string[] = [];\r\n        const httpsCheck = this.validateUrlForHttps(url);\r\n        const issuerCheck = this.validateUrlAgainstIssuer(url);\r\n\r\n        if (!httpsCheck) {\r\n            errors.push(\r\n                'https for all urls required. Also for urls received by discovery.'\r\n            );\r\n        }\r\n\r\n        if (!issuerCheck) {\r\n            errors.push(\r\n                'Every url in discovery document has to start with the issuer url.' +\r\n                'Also see property strictDiscoveryDocumentValidation.'\r\n            );\r\n        }\r\n\r\n        return errors;\r\n    }\r\n\r\n    private validateUrlForHttps(url: string): boolean {\r\n        if (!url) {\r\n            return true;\r\n        }\r\n\r\n        const lcUrl = url.toLowerCase();\r\n\r\n        if (this.requireHttps === false) {\r\n            return true;\r\n        }\r\n\r\n        if (\r\n            (lcUrl.match(/^http:\\/\\/localhost($|[:\\/])/) ||\r\n                lcUrl.match(/^http:\\/\\/localhost($|[:\\/])/)) &&\r\n            this.requireHttps === 'remoteOnly'\r\n        ) {\r\n            return true;\r\n        }\r\n\r\n        return lcUrl.startsWith('https://');\r\n    }\r\n\r\n    private validateUrlAgainstIssuer(url: string) {\r\n        if (!this.strictDiscoveryDocumentValidation) {\r\n            return true;\r\n        }\r\n        if (!url) {\r\n            return true;\r\n        }\r\n        return url.toLowerCase().startsWith(this.issuer.toLowerCase());\r\n    }\r\n\r\n    private setupRefreshTimer(): void {\r\n        if (typeof window === 'undefined') {\r\n            this.debug('timer not supported on this plattform');\r\n            return;\r\n        }\r\n\r\n        if (this.hasValidIdToken()) {\r\n            this.clearAccessTokenTimer();\r\n            this.clearIdTokenTimer();\r\n            this.setupExpirationTimers();\r\n        }\r\n\r\n        this.events.pipe(filter(e => e.type === 'token_received')).subscribe(_ => {\r\n            this.clearAccessTokenTimer();\r\n            this.clearIdTokenTimer();\r\n            this.setupExpirationTimers();\r\n        });\r\n    }\r\n\r\n    private setupExpirationTimers(): void {\r\n        const idTokenExp = this.getIdTokenExpiration() || Number.MAX_VALUE;\r\n        const accessTokenExp = this.getAccessTokenExpiration() || Number.MAX_VALUE;\r\n        const useAccessTokenExp = accessTokenExp <= idTokenExp;\r\n\r\n        if (this.hasValidAccessToken() && useAccessTokenExp) {\r\n            this.setupAccessTokenTimer();\r\n        }\r\n\r\n        if (this.hasValidIdToken() && !useAccessTokenExp) {\r\n            this.setupIdTokenTimer();\r\n        }\r\n    }\r\n\r\n    private setupAccessTokenTimer(): void {\r\n        const expiration = this.getAccessTokenExpiration();\r\n        const storedAt = this.getAccessTokenStoredAt();\r\n        const timeout = this.calcTimeout(storedAt, expiration);\r\n\r\n        this.ngZone.runOutsideAngular(() => {\r\n            this.accessTokenTimeoutSubscription = of(\r\n                new OAuthInfoEvent('token_expires', 'access_token')\r\n            )\r\n                .pipe(delay(timeout))\r\n                .subscribe(e => {\r\n                    this.ngZone.run(() => {\r\n                        this.eventsSubject.next(e);\r\n                    });\r\n                });\r\n        });\r\n    }\r\n\r\n    private setupIdTokenTimer(): void {\r\n        const expiration = this.getIdTokenExpiration();\r\n        const storedAt = this.getIdTokenStoredAt();\r\n        const timeout = this.calcTimeout(storedAt, expiration);\r\n\r\n        this.ngZone.runOutsideAngular(() => {\r\n            this.idTokenTimeoutSubscription = of(\r\n                new OAuthInfoEvent('token_expires', 'id_token')\r\n            )\r\n                .pipe(delay(timeout))\r\n                .subscribe(e => {\r\n                    this.ngZone.run(() => {\r\n                        this.eventsSubject.next(e);\r\n                    });\r\n                });\r\n        });\r\n    }\r\n\r\n    private clearAccessTokenTimer(): void {\r\n        if (this.accessTokenTimeoutSubscription) {\r\n            this.accessTokenTimeoutSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    private clearIdTokenTimer(): void {\r\n        if (this.idTokenTimeoutSubscription) {\r\n            this.idTokenTimeoutSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    private calcTimeout(storedAt: number, expiration: number): number {\r\n        const delta = (expiration - storedAt) * this.timeoutFactor;\r\n        return delta;\r\n    }\r\n\r\n    /**\r\n     * DEPRECATED. Use a provider for OAuthStorage instead:\r\n     * \r\n     * { provide: OAuthStorage, useValue: localStorage }\r\n     * \r\n     * Sets a custom storage used to store the received\r\n     * tokens on client side. By default, the browser's\r\n     * sessionStorage is used.\r\n     * @ignore\r\n     * \r\n     * @param storage\r\n     */\r\n    public setStorage(storage: OAuthStorage): void {\r\n        this._storage = storage;\r\n        this.configChanged();\r\n    }\r\n\r\n    /**\r\n     * Loads the discovery document to configure most\r\n     * properties of this service. The url of the discovery\r\n     * document is infered from the issuer's url according\r\n     * to the OpenId Connect spec. To use another url you\r\n     * can pass it to to optional parameter fullUrl.\r\n     *\r\n     * @param fullUrl\r\n     */\r\n    public loadDiscoveryDocument(fullUrl: string = null): Promise<object> {\r\n        return new Promise((resolve, reject) => {\r\n            if (!fullUrl) {\r\n                fullUrl = this.issuer || '';\r\n                if (!fullUrl.endsWith('/')) {\r\n                    fullUrl += '/';\r\n                }\r\n                fullUrl += '.well-known/openid-configuration';\r\n            }\r\n\r\n            if (!this.validateUrlForHttps(fullUrl)) {\r\n                reject('issuer must use Https. Also check property requireHttps.');\r\n                return;\r\n            }\r\n\r\n            this.http.get<OidcDiscoveryDoc>(fullUrl).subscribe(\r\n                doc => {\r\n                    if (!this.validateDiscoveryDocument(doc)) {\r\n                        this.eventsSubject.next(\r\n                            new OAuthErrorEvent('discovery_document_validation_error', null)\r\n                        );\r\n                        reject('discovery_document_validation_error');\r\n                        return;\r\n                    }\r\n\r\n                    this.loginUrl = doc.authorization_endpoint;\r\n                    this.logoutUrl = doc.end_session_endpoint || this.logoutUrl;\r\n                    this.grantTypesSupported = doc.grant_types_supported;\r\n                    this.issuer = doc.issuer;\r\n                    this.tokenEndpoint = doc.token_endpoint;\r\n                    this.userinfoEndpoint = doc.userinfo_endpoint;\r\n                    this.jwksUri = doc.jwks_uri;\r\n                    this.sessionCheckIFrameUrl = doc.check_session_iframe || this.sessionCheckIFrameUrl;\r\n\r\n                    this.discoveryDocumentLoaded = true;\r\n                    this.discoveryDocumentLoadedSubject.next(doc);\r\n\r\n                    if (this.sessionChecksEnabled) {\r\n                        this.restartSessionChecksIfStillLoggedIn();\r\n                    }\r\n\r\n                    this.loadJwks()\r\n                        .then(jwks => {\r\n                            const result: object = {\r\n                                discoveryDocument: doc,\r\n                                jwks: jwks\r\n                            };\r\n\r\n                            const event = new OAuthSuccessEvent(\r\n                                'discovery_document_loaded',\r\n                                result\r\n                            );\r\n                            this.eventsSubject.next(event);\r\n                            resolve(event);\r\n                            return;\r\n                        })\r\n                        .catch(err => {\r\n                            this.eventsSubject.next(\r\n                                new OAuthErrorEvent('discovery_document_load_error', err)\r\n                            );\r\n                            reject(err);\r\n                            return;\r\n                        });\r\n                },\r\n                err => {\r\n                    console.error('error loading discovery document', err);\r\n                    this.eventsSubject.next(\r\n                        new OAuthErrorEvent('discovery_document_load_error', err)\r\n                    );\r\n                    reject(err);\r\n                }\r\n            );\r\n        });\r\n    }\r\n\r\n    private loadJwks(): Promise<object> {\r\n        return new Promise<object>((resolve, reject) => {\r\n            if (this.jwksUri) {\r\n                this.http.get(this.jwksUri).subscribe(\r\n                    jwks => {\r\n                        this.jwks = jwks;\r\n                        this.eventsSubject.next(\r\n                            new OAuthSuccessEvent('discovery_document_loaded')\r\n                        );\r\n                        resolve(jwks);\r\n                    },\r\n                    err => {\r\n                        console.error('error loading jwks', err);\r\n                        this.eventsSubject.next(\r\n                            new OAuthErrorEvent('jwks_load_error', err)\r\n                        );\r\n                        reject(err);\r\n                    }\r\n                );\r\n            } else {\r\n                resolve(null);\r\n            }\r\n        });\r\n    }\r\n\r\n    private validateDiscoveryDocument(doc: OidcDiscoveryDoc): boolean {\r\n        let errors: string[];\r\n\r\n        if (!this.skipIssuerCheck && doc.issuer !== this.issuer) {\r\n            console.error(\r\n                'invalid issuer in discovery document',\r\n                'expected: ' + this.issuer,\r\n                'current: ' + doc.issuer\r\n            );\r\n            return false;\r\n        }\r\n\r\n        errors = this.validateUrlFromDiscoveryDocument(doc.authorization_endpoint);\r\n        if (errors.length > 0) {\r\n            console.error(\r\n                'error validating authorization_endpoint in discovery document',\r\n                errors\r\n            );\r\n            return false;\r\n        }\r\n\r\n        errors = this.validateUrlFromDiscoveryDocument(doc.end_session_endpoint);\r\n        if (errors.length > 0) {\r\n            console.error(\r\n                'error validating end_session_endpoint in discovery document',\r\n                errors\r\n            );\r\n            return false;\r\n        }\r\n\r\n        errors = this.validateUrlFromDiscoveryDocument(doc.token_endpoint);\r\n        if (errors.length > 0) {\r\n            console.error(\r\n                'error validating token_endpoint in discovery document',\r\n                errors\r\n            );\r\n        }\r\n\r\n        errors = this.validateUrlFromDiscoveryDocument(doc.userinfo_endpoint);\r\n        if (errors.length > 0) {\r\n            console.error(\r\n                'error validating userinfo_endpoint in discovery document',\r\n                errors\r\n            );\r\n            return false;\r\n        }\r\n\r\n        errors = this.validateUrlFromDiscoveryDocument(doc.jwks_uri);\r\n        if (errors.length > 0) {\r\n            console.error('error validating jwks_uri in discovery document', errors);\r\n            return false;\r\n        }\r\n\r\n        if (this.sessionChecksEnabled && !doc.check_session_iframe) {\r\n            console.warn(\r\n                'sessionChecksEnabled is activated but discovery document' +\r\n                ' does not contain a check_session_iframe field'\r\n            );\r\n        }\r\n\r\n        // this.sessionChecksEnabled = !!doc.check_session_iframe;\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Uses password flow to exchange userName and password for an\r\n     * access_token. After receiving the access_token, this method\r\n     * uses it to query the userinfo endpoint in order to get information\r\n     * about the user in question.\r\n     *\r\n     * When using this, make sure that the property oidc is set to false.\r\n     * Otherwise stricter validations take happen that makes this operation\r\n     * fail.\r\n     *\r\n     * @param userName\r\n     * @param password\r\n     * @param headers Optional additional http-headers.\r\n     */\r\n    public fetchTokenUsingPasswordFlowAndLoadUserProfile(\r\n        userName: string,\r\n        password: string,\r\n        headers: HttpHeaders = new HttpHeaders()\r\n    ): Promise<object> {\r\n        return this.fetchTokenUsingPasswordFlow(userName, password, headers).then(\r\n            () => this.loadUserProfile()\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Loads the user profile by accessing the user info endpoint defined by OpenId Connect.\r\n     *\r\n     * When using this with OAuth2 password flow, make sure that the property oidc is set to false.\r\n     * Otherwise stricter validations take happen that makes this operation\r\n     * fail.\r\n     */\r\n    public loadUserProfile(): Promise<object> {\r\n        if (!this.hasValidAccessToken()) {\r\n            throw new Error('Can not load User Profile without access_token');\r\n        }\r\n        if (!this.validateUrlForHttps(this.userinfoEndpoint)) {\r\n            throw new Error(\r\n                'userinfoEndpoint must use Http. Also check property requireHttps.'\r\n            );\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n            const headers = new HttpHeaders().set(\r\n                'Authorization',\r\n                'Bearer ' + this.getAccessToken()\r\n            );\r\n\r\n            this.http.get<UserInfo>(this.userinfoEndpoint, { headers }).subscribe(\r\n                info => {\r\n                    this.debug('userinfo received', info);\r\n\r\n                    const existingClaims = this.getIdentityClaims() || {};\r\n\r\n                    if (!this.skipSubjectCheck) {\r\n                        if (\r\n                            this.oidc &&\r\n                            (!existingClaims['sub'] || info.sub !== existingClaims['sub'])\r\n                        ) {\r\n                            const err =\r\n                                'if property oidc is true, the received user-id (sub) has to be the user-id ' +\r\n                                'of the user that has logged in with oidc.\\n' +\r\n                                'if you are not using oidc but just oauth2 password flow set oidc to false';\r\n\r\n                            reject(err);\r\n                            return;\r\n                        }\r\n                    }\r\n\r\n                    info = Object.assign({}, existingClaims, info);\r\n\r\n                    this._storage.setItem('id_token_claims_obj', JSON.stringify(info));\r\n                    this.eventsSubject.next(new OAuthSuccessEvent('user_profile_loaded'));\r\n                    resolve(info);\r\n                },\r\n                err => {\r\n                    console.error('error loading user info', err);\r\n                    this.eventsSubject.next(\r\n                        new OAuthErrorEvent('user_profile_load_error', err)\r\n                    );\r\n                    reject(err);\r\n                }\r\n            );\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Uses password flow to exchange userName and password for an access_token.\r\n     * @param userName\r\n     * @param password\r\n     * @param headers Optional additional http-headers.\r\n     */\r\n    public fetchTokenUsingPasswordFlow(\r\n        userName: string,\r\n        password: string,\r\n        headers: HttpHeaders = new HttpHeaders()\r\n    ): Promise<object> {\r\n        if (!this.validateUrlForHttps(this.tokenEndpoint)) {\r\n            throw new Error(\r\n                'tokenEndpoint must use Http. Also check property requireHttps.'\r\n            );\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n            /**\r\n             * A `HttpParameterCodec` that uses `encodeURIComponent` and `decodeURIComponent` to\r\n             * serialize and parse URL parameter keys and values.\r\n             *\r\n             * @stable\r\n             */\r\n            let params = new HttpParams({ encoder: new WebHttpUrlEncodingCodec() })\r\n                .set('grant_type', 'password')\r\n                .set('scope', this.scope)\r\n                .set('username', userName)\r\n                .set('password', password);\r\n\r\n            if (this.useHttpBasicAuthForPasswordFlow) {\r\n                const header = btoa(`${this.clientId}:${this.dummyClientSecret}`);\r\n                headers = headers.set(\r\n                    'Authentication',\r\n                    'BASIC ' + header);\r\n            }\r\n\r\n            if (!this.useHttpBasicAuthForPasswordFlow) {\r\n                params = params.set('client_id', this.clientId);\r\n            }\r\n\r\n            if (!this.useHttpBasicAuthForPasswordFlow && this.dummyClientSecret) {\r\n                params = params.set('client_secret', this.dummyClientSecret);\r\n            }\r\n\r\n            if (this.customQueryParams) {\r\n                for (const key of Object.getOwnPropertyNames(this.customQueryParams)) {\r\n                    params = params.set(key, this.customQueryParams[key]);\r\n                }\r\n            }\r\n\r\n            headers = headers.set(\r\n                'Content-Type',\r\n                'application/x-www-form-urlencoded'\r\n            );\r\n\r\n            this.http\r\n                .post<TokenResponse>(this.tokenEndpoint, params, { headers })\r\n                .subscribe(\r\n                    tokenResponse => {\r\n                        this.debug('tokenResponse', tokenResponse);\r\n                        this.storeAccessTokenResponse(\r\n                            tokenResponse.access_token,\r\n                            tokenResponse.refresh_token,\r\n                            tokenResponse.expires_in,\r\n                            tokenResponse.scope\r\n                        );\r\n\r\n                        this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\r\n                        resolve(tokenResponse);\r\n                    },\r\n                    err => {\r\n                        console.error('Error performing password flow', err);\r\n                        this.eventsSubject.next(new OAuthErrorEvent('token_error', err));\r\n                        reject(err);\r\n                    }\r\n                );\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Refreshes the token using a refresh_token.\r\n     * This does not work for implicit flow, b/c\r\n     * there is no refresh_token in this flow.\r\n     * A solution for this is provided by the\r\n     * method silentRefresh.\r\n     */\r\n    public refreshToken(): Promise<object> {\r\n        if (!this.validateUrlForHttps(this.tokenEndpoint)) {\r\n            throw new Error(\r\n                'tokenEndpoint must use Http. Also check property requireHttps.'\r\n            );\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n            let params = new HttpParams()\r\n                .set('grant_type', 'refresh_token')\r\n                .set('client_id', this.clientId)\r\n                .set('scope', this.scope)\r\n                .set('refresh_token', this._storage.getItem('refresh_token'));\r\n\r\n            if (this.dummyClientSecret) {\r\n                params = params.set('client_secret', this.dummyClientSecret);\r\n            }\r\n\r\n            if (this.customQueryParams) {\r\n                for (const key of Object.getOwnPropertyNames(this.customQueryParams)) {\r\n                    params = params.set(key, this.customQueryParams[key]);\r\n                }\r\n            }\r\n\r\n            const headers = new HttpHeaders().set(\r\n                'Content-Type',\r\n                'application/x-www-form-urlencoded'\r\n            );\r\n\r\n            this.http\r\n                .post<TokenResponse>(this.tokenEndpoint, params, { headers })\r\n                .subscribe(\r\n                    tokenResponse => {\r\n                        this.debug('refresh tokenResponse', tokenResponse);\r\n                        this.storeAccessTokenResponse(\r\n                            tokenResponse.access_token,\r\n                            tokenResponse.refresh_token,\r\n                            tokenResponse.expires_in,\r\n                            tokenResponse.scope\r\n                        );\r\n\r\n                        this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\r\n                        this.eventsSubject.next(new OAuthSuccessEvent('token_refreshed'));\r\n                        resolve(tokenResponse);\r\n                    },\r\n                    err => {\r\n                        console.error('Error performing password flow', err);\r\n                        this.eventsSubject.next(\r\n                            new OAuthErrorEvent('token_refresh_error', err)\r\n                        );\r\n                        reject(err);\r\n                    }\r\n                );\r\n        });\r\n    }\r\n\r\n    private removeSilentRefreshEventListener(): void {\r\n        if (this.silentRefreshPostMessageEventListener) {\r\n            window.removeEventListener(\r\n                'message',\r\n                this.silentRefreshPostMessageEventListener\r\n            );\r\n            this.silentRefreshPostMessageEventListener = null;\r\n        }\r\n    }\r\n\r\n    private setupSilentRefreshEventListener(): void {\r\n        this.removeSilentRefreshEventListener();\r\n\r\n        this.silentRefreshPostMessageEventListener = (e: MessageEvent) => {\r\n            let expectedPrefix = '#';\r\n\r\n            if (this.silentRefreshMessagePrefix) {\r\n                expectedPrefix += this.silentRefreshMessagePrefix;\r\n            }\r\n\r\n            if (!e || !e.data || typeof e.data !== 'string') {\r\n                return;\r\n            }\r\n\r\n            const prefixedMessage: string = e.data;\r\n\r\n            if (!prefixedMessage.startsWith(expectedPrefix)) {\r\n                return;\r\n            }\r\n\r\n            const message = '#' + prefixedMessage.substr(expectedPrefix.length);\r\n\r\n            this.tryLogin({\r\n                customHashFragment: message,\r\n                preventClearHashAfterLogin: true,\r\n                onLoginError: err => {\r\n                    this.eventsSubject.next(\r\n                        new OAuthErrorEvent('silent_refresh_error', err)\r\n                    );\r\n                },\r\n                onTokenReceived: () => {\r\n                    this.eventsSubject.next(new OAuthSuccessEvent('silently_refreshed'));\r\n                }\r\n            }).catch(err => this.debug('tryLogin during silent refresh failed', err));\r\n        };\r\n\r\n        window.addEventListener(\r\n            'message',\r\n            this.silentRefreshPostMessageEventListener\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Performs a silent refresh for implicit flow.\r\n     * Use this method to get a new tokens when/ before\r\n     * the existing tokens expires.\r\n     */\r\n    public silentRefresh(params: object = {}, noPrompt = true): Promise<OAuthEvent> {\r\n        const claims: object = this.getIdentityClaims() || {};\r\n\r\n        if (this.useIdTokenHintForSilentRefresh && this.hasValidIdToken()) {\r\n            params['id_token_hint'] = this.getIdToken();\r\n        }\r\n\r\n        /*\r\n            if (!claims) {\r\n                throw new Error('cannot perform a silent refresh as the user is not logged in');\r\n            }\r\n            */\r\n\r\n        if (!this.validateUrlForHttps(this.loginUrl)) {\r\n            throw new Error(\r\n                'tokenEndpoint must use Https. Also check property requireHttps.'\r\n            );\r\n        }\r\n\r\n        if (typeof document === 'undefined') {\r\n            throw new Error('silent refresh is not supported on this platform');\r\n        }\r\n\r\n        const existingIframe = document.getElementById(\r\n            this.silentRefreshIFrameName\r\n        );\r\n        if (existingIframe) {\r\n            document.body.removeChild(existingIframe);\r\n        }\r\n\r\n        this.silentRefreshSubject = claims['sub'];\r\n\r\n        const iframe = document.createElement('iframe');\r\n        iframe.id = this.silentRefreshIFrameName;\r\n\r\n        this.setupSilentRefreshEventListener();\r\n\r\n        const redirectUri = this.silentRefreshRedirectUri || this.redirectUri;\r\n        this.createLoginUrl(null, null, redirectUri, noPrompt, params).then(url => {\r\n            iframe.setAttribute('src', url);\r\n            \r\n            if (!this.silentRefreshShowIFrame) {\r\n                iframe.style['display'] = 'none';\r\n            }\r\n            document.body.appendChild(iframe);\r\n        });\r\n\r\n        const errors = this.events.pipe(\r\n            filter(e => e instanceof OAuthErrorEvent),\r\n            first()\r\n        );\r\n        const success = this.events.pipe(\r\n            filter(e => e.type === 'silently_refreshed'),\r\n            first()\r\n        );\r\n        const timeout = of(\r\n            new OAuthErrorEvent('silent_refresh_timeout', null)\r\n        ).pipe(delay(this.silentRefreshTimeout));\r\n\r\n        return race([errors, success, timeout])\r\n            .pipe(\r\n                tap(e => {\r\n                    if (e.type === 'silent_refresh_timeout') {\r\n                        this.eventsSubject.next(e);\r\n                    }\r\n                }),\r\n                map(e => {\r\n                    if (e instanceof OAuthErrorEvent) {\r\n                        throw e;\r\n                    }\r\n                    return e;\r\n                })\r\n            )\r\n            .toPromise();\r\n    }\r\n\r\n    private canPerformSessionCheck(): boolean {\r\n        if (!this.sessionChecksEnabled) {\r\n            return false;\r\n        }\r\n        if (!this.sessionCheckIFrameUrl) {\r\n            console.warn(\r\n                'sessionChecksEnabled is activated but there ' +\r\n                'is no sessionCheckIFrameUrl'\r\n            );\r\n            return false;\r\n        }\r\n        const sessionState = this.getSessionState();\r\n        if (!sessionState) {\r\n            console.warn(\r\n                'sessionChecksEnabled is activated but there ' + 'is no session_state'\r\n            );\r\n            return false;\r\n        }\r\n        if (typeof document === 'undefined') {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    private setupSessionCheckEventListener(): void {\r\n        this.removeSessionCheckEventListener();\r\n\r\n        this.sessionCheckEventListener = (e: MessageEvent) => {\r\n            const origin = e.origin.toLowerCase();\r\n            const issuer = this.issuer.toLowerCase();\r\n\r\n            this.debug('sessionCheckEventListener');\r\n\r\n            if (!issuer.startsWith(origin)) {\r\n                this.debug(\r\n                    'sessionCheckEventListener',\r\n                    'wrong origin',\r\n                    origin,\r\n                    'expected',\r\n                    issuer\r\n                );\r\n            }\r\n\r\n            switch (e.data) {\r\n                case 'unchanged':\r\n                    this.handleSessionUnchanged();\r\n                    break;\r\n                case 'changed':\r\n                    this.handleSessionChange();\r\n                    break;\r\n                case 'error':\r\n                    this.handleSessionError();\r\n                    break;\r\n            }\r\n\r\n            this.debug('got info from session check inframe', e);\r\n        };\r\n\r\n        window.addEventListener('message', this.sessionCheckEventListener);\r\n    }\r\n\r\n    private handleSessionUnchanged(): void {\r\n        this.debug('session check', 'session unchanged');\r\n    }\r\n\r\n    private handleSessionChange(): void {\r\n        /* events: session_changed, relogin, stopTimer, logged_out*/\r\n        this.eventsSubject.next(new OAuthInfoEvent('session_changed'));\r\n        this.stopSessionCheckTimer();\r\n        if (this.silentRefreshRedirectUri) {\r\n            this.silentRefresh().catch(_ =>\r\n                this.debug('silent refresh failed after session changed')\r\n            );\r\n            this.waitForSilentRefreshAfterSessionChange();\r\n        } else {\r\n            this.eventsSubject.next(new OAuthInfoEvent('session_terminated'));\r\n            this.logOut(true);\r\n        }\r\n    }\r\n\r\n    private waitForSilentRefreshAfterSessionChange() {\r\n        this.events\r\n            .pipe(\r\n                filter(\r\n                    (e: OAuthEvent) =>\r\n                        e.type === 'silently_refreshed' ||\r\n                        e.type === 'silent_refresh_timeout' ||\r\n                        e.type === 'silent_refresh_error'\r\n                ),\r\n                first()\r\n            )\r\n            .subscribe(e => {\r\n                if (e.type !== 'silently_refreshed') {\r\n                    this.debug('silent refresh did not work after session changed');\r\n                    this.eventsSubject.next(new OAuthInfoEvent('session_terminated'));\r\n                    this.logOut(true);\r\n                }\r\n            });\r\n    }\r\n\r\n    private handleSessionError(): void {\r\n        this.stopSessionCheckTimer();\r\n        this.eventsSubject.next(new OAuthInfoEvent('session_error'));\r\n    }\r\n\r\n    private removeSessionCheckEventListener(): void {\r\n        if (this.sessionCheckEventListener) {\r\n            window.removeEventListener('message', this.sessionCheckEventListener);\r\n            this.sessionCheckEventListener = null;\r\n        }\r\n    }\r\n\r\n    private initSessionCheck(): void {\r\n        if (!this.canPerformSessionCheck()) {\r\n            return;\r\n        }\r\n\r\n        const existingIframe = document.getElementById(this.sessionCheckIFrameName);\r\n        if (existingIframe) {\r\n            document.body.removeChild(existingIframe);\r\n        }\r\n\r\n        const iframe = document.createElement('iframe');\r\n        iframe.id = this.sessionCheckIFrameName;\r\n\r\n        this.setupSessionCheckEventListener();\r\n\r\n        const url = this.sessionCheckIFrameUrl;\r\n        iframe.setAttribute('src', url);\r\n        // iframe.style.visibility = 'hidden';\r\n        iframe.style.display = 'none';\r\n        document.body.appendChild(iframe);\r\n\r\n        this.startSessionCheckTimer();\r\n    }\r\n\r\n    private startSessionCheckTimer(): void {\r\n        this.stopSessionCheckTimer();\r\n        this.sessionCheckTimer = setInterval(\r\n            this.checkSession.bind(this),\r\n            this.sessionCheckIntervall\r\n        );\r\n    }\r\n\r\n    private stopSessionCheckTimer(): void {\r\n        if (this.sessionCheckTimer) {\r\n            clearInterval(this.sessionCheckTimer);\r\n            this.sessionCheckTimer = null;\r\n        }\r\n    }\r\n\r\n    private checkSession(): void {\r\n        const iframe: any = document.getElementById(this.sessionCheckIFrameName);\r\n\r\n        if (!iframe) {\r\n            console.warn(\r\n                'checkSession did not find iframe',\r\n                this.sessionCheckIFrameName\r\n            );\r\n        }\r\n\r\n        const sessionState = this.getSessionState();\r\n\r\n        if (!sessionState) {\r\n            this.stopSessionCheckTimer();\r\n        }\r\n\r\n        const message = this.clientId + ' ' + sessionState;\r\n        iframe.contentWindow.postMessage(message, this.issuer);\r\n    }\r\n\r\n    private createLoginUrl(\r\n        state = '',\r\n        loginHint = '',\r\n        customRedirectUri = '',\r\n        noPrompt = false,\r\n        params: object = {}\r\n    ) {\r\n        const that = this;\r\n\r\n        let redirectUri: string;\r\n\r\n        if (customRedirectUri) {\r\n            redirectUri = customRedirectUri;\r\n        } else {\r\n            redirectUri = this.redirectUri;\r\n        }\r\n\r\n        return this.createAndSaveNonce().then((nonce: any) => {\r\n            if (state) {\r\n                state = nonce + this.config.nonceStateSeparator + state;\r\n            } else {\r\n                state = nonce;\r\n            }\r\n\r\n            if (!this.requestAccessToken && !this.oidc) {\r\n                throw new Error(\r\n                    'Either requestAccessToken or oidc or both must be true'\r\n                );\r\n            }\r\n\r\n            if (this.oidc && this.requestAccessToken) {\r\n                this.responseType = 'id_token token';\r\n            } else if (this.oidc && !this.requestAccessToken) {\r\n                this.responseType = 'id_token';\r\n            } else {\r\n                this.responseType = 'token';\r\n            }\r\n\r\n            const seperationChar = that.loginUrl.indexOf('?') > -1 ? '&' : '?';\r\n\r\n            let scope = that.scope;\r\n\r\n            if (this.oidc && !scope.match(/(^|\\s)openid($|\\s)/)) {\r\n                scope = 'openid ' + scope;\r\n            }\r\n\r\n            let url =\r\n                that.loginUrl +\r\n                seperationChar +\r\n                'response_type=' +\r\n                encodeURIComponent(that.responseType) +\r\n                '&client_id=' +\r\n                encodeURIComponent(that.clientId) +\r\n                '&state=' +\r\n                encodeURIComponent(state) +\r\n                '&redirect_uri=' +\r\n                encodeURIComponent(redirectUri) +\r\n                '&scope=' +\r\n                encodeURIComponent(scope);\r\n\r\n            if (loginHint) {\r\n                url += '&login_hint=' + encodeURIComponent(loginHint);\r\n            }\r\n\r\n            if (that.resource) {\r\n                url += '&resource=' + encodeURIComponent(that.resource);\r\n            }\r\n\r\n            if (that.oidc) {\r\n                url += '&nonce=' + encodeURIComponent(nonce);\r\n            }\r\n\r\n            if (noPrompt) {\r\n                url += '&prompt=none';\r\n            }\r\n\r\n            for (const key of Object.keys(params)) {\r\n                url +=\r\n                    '&' + encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\r\n            }\r\n\r\n            if (this.customQueryParams) {\r\n                for (const key of Object.getOwnPropertyNames(this.customQueryParams)) {\r\n                    url +=\r\n                        '&' + key + '=' + encodeURIComponent(this.customQueryParams[key]);\r\n                }\r\n            }\r\n\r\n            return url;\r\n        });\r\n    }\r\n\r\n    initImplicitFlowInternal(\r\n        additionalState = '',\r\n        params: string | object = ''\r\n    ): void {\r\n        if (this.inImplicitFlow) {\r\n            return;\r\n        }\r\n\r\n        this.inImplicitFlow = true;\r\n\r\n        if (!this.validateUrlForHttps(this.loginUrl)) {\r\n            throw new Error(\r\n                'loginUrl must use Http. Also check property requireHttps.'\r\n            );\r\n        }\r\n\r\n        let addParams: object = {};\r\n        let loginHint: string = null;\r\n\r\n        if (typeof params === 'string') {\r\n            loginHint = params;\r\n        } else if (typeof params === 'object') {\r\n            addParams = params;\r\n        }\r\n\r\n        this.createLoginUrl(additionalState, loginHint, null, false, addParams)\r\n            .then(function (url) {\r\n                location.href = url;\r\n            })\r\n            .catch(error => {\r\n                console.error('Error in initImplicitFlow');\r\n                console.error(error);\r\n                this.inImplicitFlow = false;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Starts the implicit flow and redirects to user to\r\n     * the auth servers login url.\r\n     *\r\n     * @param additionalState Optinal state that is passes around.\r\n     *  You find this state in the property ``state`` after ``tryLogin`` logged in the user.\r\n     * @param params Hash with additional parameter. If it is a string, it is used for the\r\n     *               parameter loginHint (for the sake of compatibility with former versions)\r\n     */\r\n    public initImplicitFlow(\r\n        additionalState = '',\r\n        params: string | object = ''\r\n    ): void {\r\n        if (this.loginUrl !== '') {\r\n            this.initImplicitFlowInternal(additionalState, params);\r\n        } else {\r\n            this.events\r\n                .pipe(filter(e => e.type === 'discovery_document_loaded'))\r\n                .subscribe(_ => this.initImplicitFlowInternal(additionalState, params));\r\n        }\r\n    }\r\n\r\n    private callOnTokenReceivedIfExists(options: LoginOptions): void {\r\n        const that = this;\r\n        if (options.onTokenReceived) {\r\n            const tokenParams = {\r\n                idClaims: that.getIdentityClaims(),\r\n                idToken: that.getIdToken(),\r\n                accessToken: that.getAccessToken(),\r\n                state: that.state\r\n            };\r\n            options.onTokenReceived(tokenParams);\r\n        }\r\n    }\r\n\r\n    private storeAccessTokenResponse(\r\n        accessToken: string,\r\n        refreshToken: string,\r\n        expiresIn: number,\r\n        grantedScopes: String\r\n    ): void {\r\n        this._storage.setItem('access_token', accessToken);\r\n        if (grantedScopes) {\r\n            this._storage.setItem('granted_scopes', JSON.stringify(grantedScopes.split('+')));\r\n        }\r\n        this._storage.setItem('access_token_stored_at', '' + Date.now());\r\n        if (expiresIn) {\r\n            const expiresInMilliSeconds = expiresIn * 1000;\r\n            const now = new Date();\r\n            const expiresAt = now.getTime() + expiresInMilliSeconds;\r\n            this._storage.setItem('expires_at', '' + expiresAt);\r\n        }\r\n\r\n        if (refreshToken) {\r\n            this._storage.setItem('refresh_token', refreshToken);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks whether there are tokens in the hash fragment\r\n     * as a result of the implicit flow. These tokens are\r\n     * parsed, validated and used to sign the user in to the\r\n     * current client.\r\n     *\r\n     * @param options Optinal options.\r\n     */\r\n    public tryLogin(options: LoginOptions = null): Promise<void> {\r\n        options = options || {};\r\n\r\n        let parts: object;\r\n\r\n        if (options.customHashFragment) {\r\n            parts = this.urlHelper.getHashFragmentParams(options.customHashFragment);\r\n        } else {\r\n            parts = this.urlHelper.getHashFragmentParams();\r\n        }\r\n\r\n        this.debug('parsed url', parts);\r\n\r\n        const state = parts['state'];\r\n        let nonceInState = state;\r\n\r\n        if (state) {\r\n            const idx = state.indexOf(this.config.nonceStateSeparator);\r\n\r\n            if (idx > -1) {\r\n                nonceInState = state.substr(0, idx);\r\n                this.state = state.substr(idx + this.config.nonceStateSeparator.length);\r\n            }\r\n        }\r\n\r\n        if (parts['error']) {\r\n            this.debug('error trying to login');\r\n            this.handleLoginError(options, parts);\r\n            const err = new OAuthErrorEvent('token_error', {}, parts);\r\n            this.eventsSubject.next(err);\r\n            return Promise.reject(err);\r\n        }\r\n\r\n        const accessToken = parts['access_token'];\r\n        const idToken = parts['id_token'];\r\n        const sessionState = parts['session_state'];\r\n        const grantedScopes = parts['scope'];\r\n\r\n        if (!this.requestAccessToken && !this.oidc) {\r\n            return Promise.reject(\r\n                'Either requestAccessToken or oidc or both must be true.'\r\n            );\r\n        }\r\n\r\n        if (this.requestAccessToken && !accessToken) {\r\n            return Promise.resolve();\r\n        }\r\n        if (this.requestAccessToken && !options.disableOAuth2StateCheck && !state) {\r\n            return Promise.resolve();\r\n        }\r\n        if (this.oidc && !idToken) {\r\n            return Promise.resolve();\r\n        }\r\n\r\n        if (this.sessionChecksEnabled && !sessionState) {\r\n            console.warn(\r\n                'session checks (Session Status Change Notification) ' +\r\n                'is activated in the configuration but the id_token ' +\r\n                'does not contain a session_state claim'\r\n            );\r\n        }\r\n\r\n        if (this.requestAccessToken && !options.disableOAuth2StateCheck) {\r\n            const success = this.validateNonceForAccessToken(\r\n                accessToken,\r\n                nonceInState\r\n            );\r\n            if (!success) {\r\n                const event = new OAuthErrorEvent('invalid_nonce_in_state', null);\r\n                this.eventsSubject.next(event);\r\n                return Promise.reject(event);\r\n            }\r\n        }\r\n\r\n        if (this.requestAccessToken) {\r\n            this.storeAccessTokenResponse(\r\n                accessToken,\r\n                null,\r\n                parts['expires_in'] || this.fallbackAccessTokenExpirationTimeInSec,\r\n                grantedScopes\r\n            );\r\n        }\r\n\r\n        if (!this.oidc) {\r\n            this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\r\n            if (this.clearHashAfterLogin && !options.preventClearHashAfterLogin) {\r\n                location.hash = '';\r\n            }\r\n            return Promise.resolve();\r\n        }\r\n\r\n        return this.processIdToken(idToken, accessToken)\r\n            .then(result => {\r\n                if (options.validationHandler) {\r\n                    return options\r\n                        .validationHandler({\r\n                            accessToken: accessToken,\r\n                            idClaims: result.idTokenClaims,\r\n                            idToken: result.idToken,\r\n                            state: state\r\n                        })\r\n                        .then(_ => result);\r\n                }\r\n                return result;\r\n            })\r\n            .then(result => {\r\n                this.storeIdToken(result);\r\n                this.storeSessionState(sessionState);\r\n                if (this.clearHashAfterLogin) {\r\n                    location.hash = '';\r\n                }\r\n                this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\r\n                this.callOnTokenReceivedIfExists(options);\r\n                this.inImplicitFlow = false;\r\n            })\r\n            .catch(reason => {\r\n                this.eventsSubject.next(\r\n                    new OAuthErrorEvent('token_validation_error', reason)\r\n                );\r\n                console.error('Error validating tokens');\r\n                console.error(reason);\r\n                return Promise.reject(reason);\r\n            });\r\n    }\r\n\r\n    private validateNonceForAccessToken(\r\n        accessToken: string,\r\n        nonceInState: string\r\n    ): boolean {\r\n        const savedNonce = this._storage.getItem('nonce');\r\n        if (savedNonce !== nonceInState) {\r\n            const err = 'validating access_token failed. wrong state/nonce.';\r\n            console.error(err, savedNonce, nonceInState);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    protected storeIdToken(idToken: ParsedIdToken) {\r\n        this._storage.setItem('id_token', idToken.idToken);\r\n        this._storage.setItem('id_token_claims_obj', idToken.idTokenClaimsJson);\r\n        this._storage.setItem('id_token_expires_at', '' + idToken.idTokenExpiresAt);\r\n        this._storage.setItem('id_token_stored_at', '' + Date.now());\r\n    }\r\n\r\n    protected storeSessionState(sessionState: string): void {\r\n        this._storage.setItem('session_state', sessionState);\r\n    }\r\n\r\n    protected getSessionState(): string {\r\n        return this._storage.getItem('session_state');\r\n    }\r\n\r\n    private handleLoginError(options: LoginOptions, parts: object): void {\r\n        if (options.onLoginError) {\r\n            options.onLoginError(parts);\r\n        }\r\n        if (this.clearHashAfterLogin) {\r\n            location.hash = '';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     */\r\n    public processIdToken(\r\n        idToken: string,\r\n        accessToken: string\r\n    ): Promise<ParsedIdToken> {\r\n        const tokenParts = idToken.split('.');\r\n        const headerBase64 = this.padBase64(tokenParts[0]);\r\n        const headerJson = b64DecodeUnicode(headerBase64);\r\n        const header = JSON.parse(headerJson);\r\n        const claimsBase64 = this.padBase64(tokenParts[1]);\r\n        const claimsJson = b64DecodeUnicode(claimsBase64);\r\n        const claims = JSON.parse(claimsJson);\r\n        const savedNonce = this._storage.getItem('nonce');\r\n\r\n        if (Array.isArray(claims.aud)) {\r\n            if (claims.aud.every(v => v !== this.clientId)) {\r\n                const err = 'Wrong audience: ' + claims.aud.join(',');\r\n                console.warn(err);\r\n                return Promise.reject(err);\r\n            }\r\n        } else {\r\n            if (claims.aud !== this.clientId) {\r\n                const err = 'Wrong audience: ' + claims.aud;\r\n                console.warn(err);\r\n                return Promise.reject(err);\r\n            }\r\n        }\r\n\r\n        /*\r\n            if (this.getKeyCount() > 1 && !header.kid) {\r\n                let err = 'There needs to be a kid property in the id_token header when multiple keys are defined via the property jwks';\r\n                console.warn(err);\r\n                return Promise.reject(err);\r\n            }\r\n            */\r\n\r\n        if (!claims.sub) {\r\n            const err = 'No sub claim in id_token';\r\n            console.warn(err);\r\n            return Promise.reject(err);\r\n        }\r\n\r\n        /* For now, we only check whether the sub against\r\n             * silentRefreshSubject when sessionChecksEnabled is on\r\n             * We will reconsider in a later version to do this\r\n             * in every other case too.\r\n             */\r\n        if (\r\n            this.sessionChecksEnabled &&\r\n            this.silentRefreshSubject &&\r\n            this.silentRefreshSubject !== claims['sub']\r\n        ) {\r\n            const err =\r\n                'After refreshing, we got an id_token for another user (sub). ' +\r\n                `Expected sub: ${this.silentRefreshSubject}, received sub: ${\r\n                claims['sub']\r\n                }`;\r\n\r\n            console.warn(err);\r\n            return Promise.reject(err);\r\n        }\r\n\r\n        if (!claims.iat) {\r\n            const err = 'No iat claim in id_token';\r\n            console.warn(err);\r\n            return Promise.reject(err);\r\n        }\r\n\r\n        if (claims.iss !== this.issuer) {\r\n            const err = 'Wrong issuer: ' + claims.iss;\r\n            console.warn(err);\r\n            return Promise.reject(err);\r\n        }\r\n\r\n        if (claims.nonce !== savedNonce) {\r\n            const err = 'Wrong nonce: ' + claims.nonce;\r\n            console.warn(err);\r\n            return Promise.reject(err);\r\n        }\r\n\r\n        if (\r\n            !this.disableAtHashCheck &&\r\n            this.requestAccessToken &&\r\n            !claims['at_hash']\r\n        ) {\r\n            const err = 'An at_hash is needed!';\r\n            console.warn(err);\r\n            return Promise.reject(err);\r\n        }\r\n\r\n        const now = Date.now();\r\n        const issuedAtMSec = claims.iat * 1000;\r\n        const expiresAtMSec = claims.exp * 1000;\r\n        const tenMinutesInMsec = 1000 * 60 * 10;\r\n\r\n        if (\r\n            issuedAtMSec - tenMinutesInMsec >= now ||\r\n            expiresAtMSec + tenMinutesInMsec <= now\r\n        ) {\r\n            const err = 'Token has been expired';\r\n            console.error(err);\r\n            console.error({\r\n                now: now,\r\n                issuedAtMSec: issuedAtMSec,\r\n                expiresAtMSec: expiresAtMSec\r\n            });\r\n            return Promise.reject(err);\r\n        }\r\n\r\n        const validationParams: ValidationParams = {\r\n            accessToken: accessToken,\r\n            idToken: idToken,\r\n            jwks: this.jwks,\r\n            idTokenClaims: claims,\r\n            idTokenHeader: header,\r\n            loadKeys: () => this.loadJwks()\r\n        };\r\n\r\n        if (\r\n            !this.disableAtHashCheck &&\r\n            this.requestAccessToken &&\r\n            !this.checkAtHash(validationParams)\r\n        ) {\r\n            const err = 'Wrong at_hash';\r\n            console.warn(err);\r\n            return Promise.reject(err);\r\n        }\r\n\r\n        return this.checkSignature(validationParams).then(_ => {\r\n            const result: ParsedIdToken = {\r\n                idToken: idToken,\r\n                idTokenClaims: claims,\r\n                idTokenClaimsJson: claimsJson,\r\n                idTokenHeader: header,\r\n                idTokenHeaderJson: headerJson,\r\n                idTokenExpiresAt: expiresAtMSec\r\n            };\r\n            return result;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Returns the received claims about the user.\r\n     */\r\n    public getIdentityClaims(): object {\r\n        const claims = this._storage.getItem('id_token_claims_obj');\r\n        if (!claims) {\r\n            return null;\r\n        }\r\n        return JSON.parse(claims);\r\n    }\r\n\r\n    /**\r\n     * Returns the granted scopes from the server.\r\n     */\r\n    public getGrantedScopes(): object {\r\n        const scopes = this._storage.getItem('granted_scopes');\r\n        if (!scopes) {\r\n            return null;\r\n        }\r\n        return JSON.parse(scopes);\r\n    }\r\n\r\n    /**\r\n     * Returns the current id_token.\r\n     */\r\n    public getIdToken(): string {\r\n        return this._storage\r\n            ? this._storage.getItem('id_token')\r\n            : null;\r\n    }\r\n\r\n    private padBase64(base64data): string {\r\n        while (base64data.length % 4 !== 0) {\r\n            base64data += '=';\r\n        }\r\n        return base64data;\r\n    }\r\n\r\n    /**\r\n     * Returns the current access_token.\r\n     */\r\n    public getAccessToken(): string {\r\n        return this._storage.getItem('access_token');\r\n    }\r\n\r\n    public getRefreshToken(): string {\r\n        return this._storage.getItem('refresh_token');\r\n    }\r\n\r\n    /**\r\n     * Returns the expiration date of the access_token\r\n     * as milliseconds since 1970.\r\n     */\r\n    public getAccessTokenExpiration(): number {\r\n        if (!this._storage.getItem('expires_at')) {\r\n            return null;\r\n        }\r\n        return parseInt(this._storage.getItem('expires_at'), 10);\r\n    }\r\n\r\n    private getAccessTokenStoredAt(): number {\r\n        return parseInt(this._storage.getItem('access_token_stored_at'), 10);\r\n    }\r\n\r\n    private getIdTokenStoredAt(): number {\r\n        return parseInt(this._storage.getItem('id_token_stored_at'), 10);\r\n    }\r\n\r\n    /**\r\n     * Returns the expiration date of the id_token\r\n     * as milliseconds since 1970.\r\n     */\r\n    public getIdTokenExpiration(): number {\r\n        if (!this._storage.getItem('id_token_expires_at')) {\r\n            return null;\r\n        }\r\n\r\n        return parseInt(this._storage.getItem('id_token_expires_at'), 10);\r\n    }\r\n\r\n    /**\r\n     * Checkes, whether there is a valid access_token.\r\n     */\r\n    public hasValidAccessToken(): boolean {\r\n        if (this.getAccessToken()) {\r\n            const expiresAt = this._storage.getItem('expires_at');\r\n            const now = new Date();\r\n            if (expiresAt && parseInt(expiresAt, 10) < now.getTime()) {\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Checkes, whether there is a valid id_token.\r\n     */\r\n    public hasValidIdToken(): boolean {\r\n        if (this.getIdToken()) {\r\n            const expiresAt = this._storage.getItem('id_token_expires_at');\r\n            const now = new Date();\r\n            if (expiresAt && parseInt(expiresAt, 10) < now.getTime()) {\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Returns the auth-header that can be used\r\n     * to transmit the access_token to a service\r\n     */\r\n    public authorizationHeader(): string {\r\n        return 'Bearer ' + this.getAccessToken();\r\n    }\r\n\r\n    /**\r\n     * Removes all tokens and logs the user out.\r\n     * If a logout url is configured, the user is\r\n     * redirected to it.\r\n     * @param noRedirectToLogoutUrl\r\n     */\r\n    public logOut(noRedirectToLogoutUrl = false): void {\r\n        const id_token = this.getIdToken();\r\n        this._storage.removeItem('access_token');\r\n        this._storage.removeItem('id_token');\r\n        this._storage.removeItem('refresh_token');\r\n        this._storage.removeItem('nonce');\r\n        this._storage.removeItem('expires_at');\r\n        this._storage.removeItem('id_token_claims_obj');\r\n        this._storage.removeItem('id_token_expires_at');\r\n        this._storage.removeItem('id_token_stored_at');\r\n        this._storage.removeItem('access_token_stored_at');\r\n        this._storage.removeItem('granted_scopes');\r\n        this._storage.removeItem('session_state');\r\n\r\n        this.silentRefreshSubject = null;\r\n\r\n        this.eventsSubject.next(new OAuthInfoEvent('logout'));\r\n\r\n        if (!this.logoutUrl) {\r\n            return;\r\n        }\r\n        if (noRedirectToLogoutUrl) {\r\n            return;\r\n        }\r\n\r\n        if (!id_token && !this.postLogoutRedirectUri) {\r\n            return;\r\n        }\r\n\r\n        let logoutUrl: string;\r\n\r\n        if (!this.validateUrlForHttps(this.logoutUrl)) {\r\n            throw new Error(\r\n                'logoutUrl must use Http. Also check property requireHttps.'\r\n            );\r\n        }\r\n\r\n        // For backward compatibility\r\n        if (this.logoutUrl.indexOf('{{') > -1) {\r\n            logoutUrl = this.logoutUrl\r\n                .replace(/\\{\\{id_token\\}\\}/, id_token)\r\n                .replace(/\\{\\{client_id\\}\\}/, this.clientId);\r\n        } else {\r\n\r\n            let params = new HttpParams();\r\n\r\n            if (id_token) {\r\n                params = params.set('id_token_hint', id_token);\r\n            }\r\n\r\n            const postLogoutUrl = this.postLogoutRedirectUri || this.redirectUri;\r\n            if (postLogoutUrl) {\r\n                params = params.set('post_logout_redirect_uri', postLogoutUrl);\r\n            }\r\n\r\n            logoutUrl =\r\n                this.logoutUrl +\r\n                (this.logoutUrl.indexOf('?') > -1 ? '&' : '?') +\r\n                params.toString()\r\n        }\r\n        location.href = logoutUrl;\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     */\r\n    public createAndSaveNonce(): Promise<string> {\r\n        const that = this;\r\n        return this.createNonce().then(function (nonce: any) {\r\n            that._storage.setItem('nonce', nonce);\r\n            return nonce;\r\n        });\r\n    }\r\n\r\n    protected createNonce(): Promise<string> {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.rngUrl) {\r\n                throw new Error(\r\n                    'createNonce with rng-web-api has not been implemented so far'\r\n                );\r\n            } else {\r\n                let text = '';\r\n                const possible =\r\n                    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n\r\n                for (let i = 0; i < 40; i++) {\r\n                    text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n                }\r\n\r\n                resolve(text);\r\n            }\r\n        });\r\n    }\r\n\r\n    private checkAtHash(params: ValidationParams): boolean {\r\n        if (!this.tokenValidationHandler) {\r\n            console.warn(\r\n                'No tokenValidationHandler configured. Cannot check at_hash.'\r\n            );\r\n            return true;\r\n        }\r\n        return this.tokenValidationHandler.validateAtHash(params);\r\n    }\r\n\r\n    private checkSignature(params: ValidationParams): Promise<any> {\r\n        if (!this.tokenValidationHandler) {\r\n            console.warn(\r\n                'No tokenValidationHandler configured. Cannot check signature.'\r\n            );\r\n            return Promise.resolve(null);\r\n        }\r\n        return this.tokenValidationHandler.validateSignature(params);\r\n    }\r\n}\r\n",
    "import { HttpParameterCodec } from '@angular/common/http';\r\n/**\r\n * This custom encoder allows charactes like +, % and / to be used in passwords\r\n */\r\nexport class WebHttpUrlEncodingCodec implements HttpParameterCodec {\r\n  encodeKey(k: string): string {\r\n    return encodeURIComponent(k);\r\n  }\r\n\r\n  encodeValue(v: string): string {\r\n    return encodeURIComponent(v);\r\n  }\r\n\r\n  decodeKey(k: string): string {\r\n    return decodeURIComponent(k);\r\n  }\r\n\r\n  decodeValue(v: string) {\r\n    return decodeURIComponent(v);\r\n  }\r\n}\r\n",
    "export class AuthConfig {\r\n  /**\r\n   * The client's id as registered with the auth server\r\n   */\r\n  public clientId? = '';\r\n\r\n  /**\r\n   * The client's redirectUri as registered with the auth server\r\n   */\r\n  public redirectUri? = '';\r\n\r\n  /**\r\n   * An optional second redirectUri where the auth server\r\n   * redirects the user to after logging out.\r\n   */\r\n  public postLogoutRedirectUri? = '';\r\n\r\n  /**\r\n   * The auth server's endpoint that allows to log\r\n   * the user in when using implicit flow.\r\n   */\r\n  public loginUrl? = '';\r\n\r\n  /**\r\n   * The requested scopes\r\n   */\r\n  public scope? = 'openid profile';\r\n\r\n  public resource? = '';\r\n\r\n  public rngUrl? = '';\r\n\r\n  /**\r\n   * Defines whether to use OpenId Connect during\r\n   * implicit flow.\r\n   */\r\n  public oidc? = true;\r\n\r\n  /**\r\n   * Defines whether to request a access token during\r\n   * implicit flow.\r\n   */\r\n  public requestAccessToken? = true;\r\n\r\n  public options?: any = null;\r\n\r\n  /**\r\n   * The issuer's uri.\r\n   */\r\n  public issuer? = '';\r\n\r\n  /**\r\n   * The logout url.\r\n   */\r\n  public logoutUrl? = '';\r\n\r\n  /**\r\n   * Defines whether to clear the hash fragment after logging in.\r\n   */\r\n  public clearHashAfterLogin? = true;\r\n\r\n  /**\r\n   * Url of the token endpoint as defined by OpenId Connect and OAuth 2.\r\n   */\r\n  public tokenEndpoint?: string = null;\r\n\r\n  /**\r\n   * Url of the userinfo endpoint as defined by OpenId Connect.\r\n   *\r\n   */\r\n  public userinfoEndpoint?: string = null;\r\n\r\n  public responseType? = 'token';\r\n\r\n  /**\r\n   * Defines whether additional debug information should\r\n   * be shown at the console. Note that in certain browsers\r\n   * the verbosity of the console needs to be explicitly set\r\n   * to include Debug level messages.\r\n   */\r\n   public showDebugInformation? = false;\r\n\r\n  /**\r\n   * The redirect uri used when doing silent refresh.\r\n   */\r\n  public silentRefreshRedirectUri? = '';\r\n\r\n  public silentRefreshMessagePrefix? = '';\r\n\r\n  /**\r\n   * Set this to true to display the iframe used for\r\n   * silent refresh for debugging.\r\n   */\r\n  public silentRefreshShowIFrame? = false;\r\n\r\n  /**\r\n   * Timeout for silent refresh.\r\n   * @internal\r\n   * depreacted b/c of typo, see silentRefreshTimeout\r\n   */\r\n  public siletRefreshTimeout?: number = 1000 * 20;\r\n\r\n  /**\r\n   * Timeout for silent refresh.\r\n   */\r\n  public silentRefreshTimeout?: number = 1000 * 20;\r\n\r\n  /**\r\n   * Some auth servers don't allow using password flow\r\n   * w/o a client secreat while the standards do not\r\n   * demand for it. In this case, you can set a password\r\n   * here. As this passwort is exposed to the public\r\n   * it does not bring additional security and is therefore\r\n   * as good as using no password.\r\n   */\r\n  public dummyClientSecret?: string = null;\r\n\r\n  /**\r\n   * Defines whether https is required.\r\n   * The default value is remoteOnly which only allows\r\n   * http for localhost, while every other domains need\r\n   * to be used with https.\r\n   */\r\n  public requireHttps?: boolean | 'remoteOnly' = 'remoteOnly';\r\n\r\n  /**\r\n   * Defines whether every url provided by the discovery\r\n   * document has to start with the issuer's url.\r\n   */\r\n  public strictDiscoveryDocumentValidation? = true;\r\n\r\n  /**\r\n   * JSON Web Key Set (https://tools.ietf.org/html/rfc7517)\r\n   * with keys used to validate received id_tokens.\r\n   * This is taken out of the disovery document. Can be set manually too.\r\n   */\r\n  public jwks?: object = null;\r\n\r\n  /**\r\n   * Map with additional query parameter that are appended to\r\n   * the request when initializing implicit flow.\r\n   */\r\n  public customQueryParams?: object = null;\r\n\r\n  public silentRefreshIFrameName? = 'angular-oauth-oidc-silent-refresh-iframe';\r\n\r\n  /**\r\n   * Defines when the token_timeout event should be raised.\r\n   * If you set this to the default value 0.75, the event\r\n   * is triggered after 75% of the token's life time.\r\n   */\r\n  public timeoutFactor? = 0.75;\r\n\r\n  /**\r\n   * If true, the lib will try to check whether the user\r\n   * is still logged in on a regular basis as described\r\n   * in http://openid.net/specs/openid-connect-session-1_0.html#ChangeNotification\r\n   */\r\n  public sessionChecksEnabled? = false;\r\n\r\n  /**\r\n   * Intervall in msec for checking the session\r\n   * according to http://openid.net/specs/openid-connect-session-1_0.html#ChangeNotification\r\n   */\r\n  public sessionCheckIntervall? = 3 * 1000;\r\n\r\n  /**\r\n   * Url for the iframe used for session checks\r\n   */\r\n  public sessionCheckIFrameUrl?: string = null;\r\n\r\n  /**\r\n   * Name of the iframe to use for session checks\r\n   */\r\n  public sessionCheckIFrameName? = 'angular-oauth-oidc-check-session-iframe';\r\n\r\n  /**\r\n   * This property has been introduced to disable at_hash checks\r\n   * and is indented for Identity Provider that does not deliver\r\n   * an at_hash EVEN THOUGH its recommended by the OIDC specs.\r\n   * Of course, when disabling these checks the we are bypassing\r\n   * a security check which means we are more vulnerable.\r\n   */\r\n  public disableAtHashCheck? = false;\r\n\r\n  /*\r\n     * Defines wether to check the subject of a refreshed token after silent refresh.\r\n     * Normally, it should be the same as before.\r\n    */\r\n  public skipSubjectCheck? = false;\r\n\r\n  public useIdTokenHintForSilentRefresh? = false;\r\n\r\n  /*\r\n     * Defined whether to skip the validation of the issuer in the discovery document.\r\n     * Normally, the discovey document's url starts with the url of the issuer.\r\n     */\r\n  public skipIssuerCheck? = false;\r\n\r\n  /**\r\n   * According to rfc6749 it is recommended (but not required) that the auth\r\n   * server exposes the access_token's life time in seconds.\r\n   * This is a fallback value for the case this value is not exposed.\r\n   */\r\n  public fallbackAccessTokenExpirationTimeInSec?: number;\r\n\r\n  /*\r\n     * final state sent to issuer is built as follows:\r\n     * state = nonce + nonceStateSeparator + additional state\r\n     * Default separator is ';' (encoded %3B).\r\n     * In rare cases, this character might be forbidden or inconvenient to use by the issuer so it can be customized.\r\n     */\r\n  public nonceStateSeparator? = ';';\r\n\r\n  /*\r\n   * set this to true to use HTTP BASIC auth for password flow\r\n  */\r\n  public useHttpBasicAuthForPasswordFlow? = false;\r\n\r\n  constructor(json?: Partial<AuthConfig>) {\r\n    if (json) {\r\n      Object.assign(this, json);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This property allows you to override the method that is used to open the login url,\r\n   * allowing a way for implementations to specify their own method of routing to new\r\n   * urls.\r\n   */\r\n  public openUri?: ((uri: string) => void) = uri => {\r\n    location.href = uri;\r\n  }\r\n}\r\n",
    "// see: https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#The_.22Unicode_Problem.22\r\nexport function b64DecodeUnicode(str) {\r\n  const base64 = str.replace(/\\-/g, '+').replace(/\\_/g, '/');\r\n\r\n  return decodeURIComponent(\r\n    atob(base64)\r\n      .split('')\r\n      .map(function(c) {\r\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n      })\r\n      .join('')\r\n  );\r\n}\r\n",
    "export type EventType =\r\n  | 'discovery_document_loaded'\r\n  | 'received_first_token'\r\n  | 'jwks_load_error'\r\n  | 'invalid_nonce_in_state'\r\n  | 'discovery_document_load_error'\r\n  | 'discovery_document_validation_error'\r\n  | 'user_profile_loaded'\r\n  | 'user_profile_load_error'\r\n  | 'token_received'\r\n  | 'token_error'\r\n  | 'token_refreshed'\r\n  | 'token_refresh_error'\r\n  | 'silent_refresh_error'\r\n  | 'silently_refreshed'\r\n  | 'silent_refresh_timeout'\r\n  | 'token_validation_error'\r\n  | 'token_expires'\r\n  | 'session_changed'\r\n  | 'session_error'\r\n  | 'session_terminated'\r\n  | 'logout';\r\n\r\nexport abstract class OAuthEvent {\r\n  constructor(readonly type: EventType) {}\r\n}\r\n\r\nexport class OAuthSuccessEvent extends OAuthEvent {\r\n  constructor(type: EventType, readonly info: any = null) {\r\n    super(type);\r\n  }\r\n}\r\n\r\nexport class OAuthInfoEvent extends OAuthEvent {\r\n  constructor(type: EventType, readonly info: any = null) {\r\n    super(type);\r\n  }\r\n}\r\n\r\nexport class OAuthErrorEvent extends OAuthEvent {\r\n  constructor(\r\n    type: EventType,\r\n    readonly reason: object,\r\n    readonly params: object = null\r\n  ) {\r\n    super(type);\r\n  }\r\n}\r\n",
    "import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class UrlHelperService {\r\n  public getHashFragmentParams(customHashFragment?: string): object {\r\n    let hash = customHashFragment || window.location.hash;\r\n\r\n    hash = decodeURIComponent(hash);\r\n\r\n    if (hash.indexOf('#') !== 0) {\r\n      return {};\r\n    }\r\n\r\n    const questionMarkPosition = hash.indexOf('?');\r\n\r\n    if (questionMarkPosition > -1) {\r\n      hash = hash.substr(questionMarkPosition + 1);\r\n    } else {\r\n      hash = hash.substr(1);\r\n    }\r\n\r\n    return this.parseQueryString(hash);\r\n  }\r\n\r\n  public parseQueryString(queryString: string): object {\r\n    const data = {};\r\n    let\r\n      pairs,\r\n      pair,\r\n      separatorIndex,\r\n      escapedKey,\r\n      escapedValue,\r\n      key,\r\n      value;\r\n\r\n    if (queryString === null) {\r\n      return data;\r\n    }\r\n\r\n    pairs = queryString.split('&');\r\n\r\n    for (let i = 0; i < pairs.length; i++) {\r\n      pair = pairs[i];\r\n      separatorIndex = pair.indexOf('=');\r\n\r\n      if (separatorIndex === -1) {\r\n        escapedKey = pair;\r\n        escapedValue = null;\r\n      } else {\r\n        escapedKey = pair.substr(0, separatorIndex);\r\n        escapedValue = pair.substr(separatorIndex + 1);\r\n      }\r\n\r\n      key = decodeURIComponent(escapedKey);\r\n      value = decodeURIComponent(escapedValue);\r\n\r\n      if (key.substr(0, 1) === '/') { key = key.substr(1); }\r\n\r\n      data[key] = value;\r\n    }\r\n\r\n    return data;\r\n  }\r\n}\r\n",
    "export interface ValidationParams {\r\n  idToken: string;\r\n  accessToken: string;\r\n  idTokenHeader: object;\r\n  idTokenClaims: object;\r\n  jwks: object;\r\n  loadKeys: () => Promise<object>;\r\n}\r\n\r\n/**\r\n * Interface for Handlers that are hooked in to\r\n * validate tokens.\r\n */\r\nexport abstract class ValidationHandler {\r\n  /**\r\n   * Validates the signature of an id_token.\r\n   */\r\n  public abstract validateSignature(\r\n    validationParams: ValidationParams\r\n  ): Promise<any>;\r\n\r\n  /**\r\n   * Validates the at_hash in an id_token against the received access_token.\r\n   */\r\n  public abstract validateAtHash(validationParams: ValidationParams): boolean;\r\n}\r\n\r\n/**\r\n * This abstract implementation of ValidationHandler already implements\r\n * the method validateAtHash. However, to make use of it,\r\n * you have to override the method calcHash.\r\n */\r\nexport abstract class AbstractValidationHandler implements ValidationHandler {\r\n  /**\r\n   * Validates the signature of an id_token.\r\n   */\r\n  abstract validateSignature(validationParams: ValidationParams): Promise<any>;\r\n\r\n  /**\r\n   * Validates the at_hash in an id_token against the received access_token.\r\n   */\r\n  validateAtHash(params: ValidationParams): boolean {\r\n    let hashAlg = this.inferHashAlgorithm(params.idTokenHeader);\r\n\r\n    let tokenHash = this.calcHash(params.accessToken, hashAlg); // sha256(accessToken, { asString: true });\r\n\r\n    let leftMostHalf = tokenHash.substr(0, tokenHash.length / 2);\r\n\r\n    let tokenHashBase64 = btoa(leftMostHalf);\r\n\r\n    let atHash = tokenHashBase64\r\n      .replace(/\\+/g, '-')\r\n      .replace(/\\//g, '_')\r\n      .replace(/=/g, '');\r\n    let claimsAtHash = params.idTokenClaims['at_hash'].replace(/=/g, '');\r\n\r\n    if (atHash !== claimsAtHash) {\r\n      console.error('exptected at_hash: ' + atHash);\r\n      console.error('actual at_hash: ' + claimsAtHash);\r\n    }\r\n\r\n    return atHash === claimsAtHash;\r\n  }\r\n\r\n  /**\r\n   * Infers the name of the hash algorithm to use\r\n   * from the alg field of an id_token.\r\n   *\r\n   * @param jwtHeader the id_token's parsed header\r\n   */\r\n  protected inferHashAlgorithm(jwtHeader: object): string {\r\n    let alg: string = jwtHeader['alg'];\r\n\r\n    if (!alg.match(/^.S[0-9]{3}$/)) {\r\n      throw new Error('Algorithm not supported: ' + alg);\r\n    }\r\n\r\n    return 'sha' + alg.substr(2);\r\n  }\r\n\r\n  /**\r\n   * Calculates the hash for the passed value by using\r\n   * the passed hash algorithm.\r\n   *\r\n   * @param valueToHash\r\n   * @param algorithm\r\n   */\r\n  protected abstract calcHash(valueToHash: string, algorithm: string): string;\r\n}\r\n",
    "/**\r\n * Additional options that can be passt to tryLogin.\r\n */\r\nexport class LoginOptions {\r\n  /**\r\n   * Is called, after a token has been received and\r\n   * successfully validated.\r\n   *\r\n   * Deprecated:  Use property ``events`` on OAuthService instead.\r\n   */\r\n  onTokenReceived?: (receivedTokens: ReceivedTokens) => void;\r\n\r\n  /**\r\n   * Hook, to validate the received tokens.\r\n   * Deprecated:  Use property ``tokenValidationHandler`` on OAuthService instead.\r\n   */\r\n  validationHandler?: (receivedTokens: ReceivedTokens) => Promise<any>;\r\n\r\n  /**\r\n   * Called when tryLogin detects that the auth server\r\n   * included an error message into the hash fragment.\r\n   *\r\n   * Deprecated:  Use property ``events`` on OAuthService instead.\r\n   */\r\n  onLoginError?: (params: object) => void;\r\n\r\n  /**\r\n   * A custom hash fragment to be used instead of the\r\n   * actual one. This is used for silent refreshes, to\r\n   * pass the iframes hash fragment to this method.\r\n   */\r\n  customHashFragment?: string;\r\n\r\n  /**\r\n   * Set this to true to disable the oauth2 state\r\n   * check which is a best practice to avoid\r\n   * security attacks.\r\n   * As OIDC defines a nonce check that includes\r\n   * this, this can be set to true when only doing\r\n   * OIDC.\r\n   */\r\n  disableOAuth2StateCheck?: boolean;\r\n\r\n  /**\r\n   * Normally, you want to clear your hash fragment after\r\n   * the lib read the token(s) so that they are not displayed\r\n   * anymore in the url. If not, set this to true.\r\n   */\r\n  preventClearHashAfterLogin? = false;\r\n}\r\n\r\n/**\r\n * Defines a simple storage that can be used for\r\n * storing the tokens at client side.\r\n * Is compatible to localStorage and sessionStorage,\r\n * but you can also create your own implementations.\r\n */\r\nexport abstract class OAuthStorage {\r\n  abstract getItem(key: string): string | null;\r\n  abstract removeItem(key: string): void;\r\n  abstract setItem(key: string, data: string): void;\r\n}\r\n\r\n/**\r\n * Represents the received tokens, the received state\r\n * and the parsed claims from the id-token.\r\n */\r\nexport class ReceivedTokens {\r\n  idToken: string;\r\n  accessToken: string;\r\n  idClaims?: object;\r\n  state?: string;\r\n}\r\n\r\n/**\r\n * Represents the parsed and validated id_token.\r\n */\r\nexport interface ParsedIdToken {\r\n  idToken: string;\r\n  idTokenClaims: object;\r\n  idTokenHeader: object;\r\n  idTokenClaimsJson: string;\r\n  idTokenHeaderJson: string;\r\n  idTokenExpiresAt: number;\r\n}\r\n\r\n/**\r\n * Represents the response from the token endpoint\r\n * http://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\r\n */\r\nexport interface TokenResponse {\r\n  access_token: string;\r\n  token_type: string;\r\n  expires_in: number;\r\n  refresh_token: string;\r\n  scope: string;\r\n  state?: string;\r\n}\r\n\r\n/**\r\n * Represents the response from the user info endpoint\r\n * http://openid.net/specs/openid-connect-core-1_0.html#UserInfo\r\n */\r\nexport interface UserInfo {\r\n  sub: string;\r\n  [key: string]: any;\r\n}\r\n\r\n/**\r\n * Represents an OpenID Connect discovery document\r\n */\r\nexport interface OidcDiscoveryDoc {\r\n  issuer: string;\r\n  authorization_endpoint: string;\r\n  token_endpoint: string;\r\n  token_endpoint_auth_methods_supported: string[];\r\n  token_endpoint_auth_signing_alg_values_supported: string[];\r\n  userinfo_endpoint: string;\r\n  check_session_iframe: string;\r\n  end_session_endpoint: string;\r\n  jwks_uri: string;\r\n  registration_endpoint: string;\r\n  scopes_supported: string[];\r\n  response_types_supported: string[];\r\n  acr_values_supported: string[];\r\n  response_modes_supported: string[];\r\n  grant_types_supported: string[];\r\n  subject_types_supported: string[];\r\n  userinfo_signing_alg_values_supported: string[];\r\n  userinfo_encryption_alg_values_supported: string[];\r\n  userinfo_encryption_enc_values_supported: string[];\r\n  id_token_signing_alg_values_supported: string[];\r\n  id_token_encryption_alg_values_supported: string[];\r\n  id_token_encryption_enc_values_supported: string[];\r\n  request_object_signing_alg_values_supported: string[];\r\n  display_values_supported: string[];\r\n  claim_types_supported: string[];\r\n  claims_supported: string[];\r\n  claims_parameter_supported: boolean;\r\n  service_documentation: string;\r\n  ui_locales_supported: string[];\r\n}\r\n"
  ],
  "names": [
    "rs.KJUR",
    "rs.KEYUTIL"
  ],
  "mappings": "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"
}
